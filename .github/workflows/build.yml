name: Build QEMU WebAssembly (Advanced)
on: [push]

jobs:
  build-qemu-wasm:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 libsdl2-dev libglib2.0-dev libpixman-1-dev ninja-build git

      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          echo "EMSDK_PATH=$(pwd)" >> $GITHUB_ENV
          source ./emsdk_env.sh
          echo "Emscripten version: $(emcc --version)"
        working-directory: .
        timeout-minutes: 10

      - name: Download QEMU Source
        run: |
          QEMU_VERSION="9.2.0"
          wget --timeout=300 --tries=3 https://download.qemu.org/qemu-${QEMU_VERSION}.tar.xz || {
            echo "Error: Failed to download qemu-${QEMU_VERSION}.tar.xz."
            exit 1
          }
          tar -xf qemu-${QEMU_VERSION}.tar.xz
          mv qemu-${QEMU_VERSION} qemu
        timeout-minutes: 10

      - name: Patch QEMU Configure Script
        run: |
          cd qemu
          sed -i '/Unrecognized host OS/ { s/error_exit/#error_exit/; s|$|\necho "Forcing host OS to linux for Emscripten build"\nhost_os=linux|; }' configure
          echo "Patched configure script to force host_os=linux"
        working-directory: .

  # ... previous steps remain the same ...

      - name: Configure QEMU for WebAssembly
        run: |
          source "${{ env.EMSDK_PATH }}/emsdk_env.sh"
          cd qemu
          emconfigure ./configure \
            --target-list=i386-softmmu \
            --enable-tcg-interpreter \
            --disable-xen \
            --disable-system \
            --enable-sdl \
            --audio-drv-list= || {  # Removed --cross-prefix=em-
            echo "Configuration failed! Check logs above for details."
            exit 1
          }
          echo "Configuration completed successfully."
          ls -la config-host.mak
        working-directory: .

      - name: Build QEMU
        run: |
          source "${{ env.EMSDK_PATH }}/emsdk_env.sh"
          cd qemu
          emmake make -j2 V=1 \
            CFLAGS="-s USE_SDL=2 -s ASSERTIONS=1 -s SAFE_HEAP=1" \
            LDFLAGS="-s USE_SDL=2 -s EXPORTED_FUNCTIONS='[_main]' -s EXPORTED_RUNTIME_METHODS='[ccall,cwrap]' -s ALLOW_MEMORY_GROWTH=1 -s WASM=1 -o qemu-system-i386.js" || {
            echo "Build failed! Check logs above for details."
            exit 1
          }
          echo "Build completed, checking binaries:"
          ls -la i386-softmmu/qemu-system-i386*
        working-directory: .
        timeout-minutes: 25  # Increased timeout
      - name: Verify Output Files
        run: |
          cd qemu/i386-softmmu
          if [ ! -f "qemu-system-i386.js" ] || [ ! -f "qemu-system-i386.wasm" ] || [ ! -s "qemu-system-i386.wasm" ]; then
            echo "Error: Missing or empty qemu-system-i386.js or qemu-system-i386.wasm!"
            ls -la .
            exit 1
          fi
          echo "Output files verified:"
          ls -la qemu-system-i386.*
        working-directory: .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qemu-wasm-i386
          path: qemu/i386-softmmu/qemu-system-i386.*
          if-no-files-found: error
          retention-days: 7

      - name: Cleanup
        run: |
          rm -rf qemu emsdk

      - name: Notify Build Status
        if: always()
        run: |
          echo "QEMU WebAssembly build completed with status: ${{ job.status }}"
