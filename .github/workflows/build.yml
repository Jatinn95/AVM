name: Android Emulator CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  android_test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android environment
      run: |
        # Create Android SDK directory
        mkdir -p ~/android-sdk
        echo "ANDROID_SDK_ROOT=~/android-sdk" >> $GITHUB_ENV

    - name: Install Android SDK
      uses: android-actions/setup-android@v3
      with:
        sdk-path: ~/android-sdk
        cmdline-tools: 'latest'
        build-tools: '34.0.0'
        platform-tools: 'latest'
        platforms: 'android-30'
        emulator: 'latest'

    - name: Install system image
      run: |
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-30;google_apis;x86_64"
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --list

    - name: Create Android Virtual Device
      run: |
        # Create necessary directories
        mkdir -p ~/.android/avd
        touch ~/.android/repositories.cfg

        # List available devices
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager list device

        # Create AVD with different device profile
        echo "no" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager create avd \
          --force \
          --name "ci_emulator" \
          --package "system-images;android-30;google_apis;x86_64" \
          --abi "x86_64" \
          --device "pixel_xl"

        # Debug: Show created files
        echo "AVD directory contents:"
        ls -la ~/.android/avd/ci_emulator.avd/

        # Configure AVD
        echo "hw.ramSize=2048" >> ~/.android/avd/ci_emulator.avd/config.ini
        echo "hw.gpu.enabled=yes" >> ~/.android/avd/ci_emulator.avd/config.ini
        echo "hw.gpu.mode=auto" >> ~/.android/avd/ci_emulator.avd/config.ini
        echo "vm.heapSize=256" >> ~/.android/avd/ci_emulator.avd/config.ini

    - name: Setup KVM acceleration
      run: |
        sudo apt-get update -qq
        sudo apt-get install -qq qemu-kvm
        sudo chmod 777 /dev/kvm
        groups
        echo "KVM status:"
        kvm-ok || true

    - name: Start emulator
      run: |
        # Start emulator with verbose logging
        $ANDROID_SDK_ROOT/emulator/emulator \
          -avd ci_emulator \
          -no-window \
          -no-audio \
          -no-boot-anim \
          -gpu auto \
          -accel on \
          -writable-system \
          -show-kernel \
          -verbose \
          -qemu -m 2048 -enable-kvm > emulator.log 2>&1 &

        # Wait for device
        $ANDROID_SDK_ROOT/platform-tools/adb wait-for-device
        echo "Emulator started. Waiting for boot..."

        # Wait for complete boot
        while true; do
          boot_completed=$($ANDROID_SDK_ROOT/platform-tools/adb shell getprop sys.boot_completed | tr -d '\r')
          [ "$boot_completed" = "1" ] && break
          sleep 5
          echo "Waiting for boot completion..."
        done

        echo "Emulator is ready"
        $ANDROID_SDK_ROOT/platform-tools/adb devices -l

    - name: Show emulator logs
      if: always()
      run: |
        echo "Emulator logs:"
        cat emulator.log || echo "No emulator logs found"
