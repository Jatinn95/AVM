name: Build QEMU WebAssembly
on: [push, workflow_dispatch]
jobs:
  build-qemu-wasm:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      QEMU_VERSION: "9.2.0"
      EMSCRIPTEN_VERSION: "latest"
      BUILD_DIR: "qemu-build-wasm"
      OUTPUT_DIR: "qemu-wasm-dist"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            git \
            python3 \
            python3-pip \
            ninja-build \
            libglib2.0-dev \
            libpixman-1-dev \
            libsdl2-dev \
            pkg-config \
            wget \
            xz-utils
          sudo pip3 install meson==1.5.0

      - name: Install Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}
          actions-cache-folder: 'emsdk_cache'

      - name: Download QEMU Source
        run: |
          wget -q --show-progress https://download.qemu.org/qemu-${{ env.QEMU_VERSION }}.tar.xz
          tar -xf qemu-${{ env.QEMU_VERSION }}.tar.xz
          mv qemu-${{ env.QEMU_VERSION }} qemu-src
          rm qemu-${{ env.QEMU_VERSION }}.tar.xz

      - name: Patch QEMU Build System
        run: |
          cd qemu-src
          # Disable sanity checks in meson.build
          sed -i 's/run_command(cc, check_args, check: true)/true/' meson.build
          # Disable 64-bit compilation
          sed -i 's/-m64//g' configure meson.build

      - name: Configure and Build
        run: |
          mkdir -p ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          
          # Source Emscripten environment
          source "$EMSDK/emsdk_env.sh"
          
          # Create Emscripten cross file
          cat > emscripten-cross.txt << 'EOF'
          [binaries]
          c = 'emcc'
          cpp = 'em++'
          ar = 'emar'
          strip = 'emstrip'
          pkgconfig = 'pkg-config'
          
          [properties]
          needs_exe_wrapper = false
          skip_sanity_check = true
          
          [host_machine]
          system = 'emscripten'
          cpu_family = 'wasm32'
          cpu = 'wasm32'
          endian = 'little'
          EOF
          
          # Configure with Meson
          meson setup ../qemu-src \
            --cross-file emscripten-cross.txt \
            -Dtarget_list=i386-softmmu \
            -Dsdl=enabled \
            -Dxen=disabled \
            -Dkvm=disabled \
            -Dvnc=disabled \
            -Ddocs=disabled \
            -Dtools=disabled \
            -Dguest_agent=disabled \
            -Db_lto=true \
            -Doptimization=3 \
            -Ddebug=false \
            -Dstrip=true \
            -Db_pie=false
          
          # Build with ninja
          ninja -v
          
          # Verify output
          if [ -f "qemu-system-i386" ]; then
            echo "Build successful"
            mkdir -p ${{ env.OUTPUT_DIR }}
            mv qemu-system-i386 qemu-system-i386.js
            cp qemu-system-i386.* ${{ env.OUTPUT_DIR }}/
          else
            echo "Build failed"
            exit 1
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qemu-wasm-build
          path: ${{ env.OUTPUT_DIR }}/*
          if-no-files-found: error
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          rm -rf qemu-src ${{ env.BUILD_DIR }} ${{ env.OUTPUT_DIR }}
