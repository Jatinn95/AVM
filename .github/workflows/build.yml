name: Build QEMU WebAssembly (Advanced)
on: [push]

jobs:
  build-qemu-wasm:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 python3-pip libsdl2-dev libglib2.0-dev libpixman-1-dev ninja-build git
          # Install a newer version of Meson via pip
          pip3 install --user meson>=1.5.0
          # Ensure the user-installed Meson is in PATH
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          meson --version  # Verify the installed version
        timeout-minutes: 5

      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          echo "EMSDK_PATH=$(pwd)" >> $GITHUB_ENV
          source ./emsdk_env.sh
          echo "Emscripten version: $(emcc --version)"
        working-directory: .
        timeout Ascending: true
        timeout-minutes: 10

      - name: Download QEMU Source
        run: |
          QEMU_VERSION="9.2.0"
          wget --timeout=300 --tries=3 https://download.qemu.org/qemu-${QEMU_VERSION}.tar.xz || {
            echo "Error: Failed to download qemu-${QEMU_VERSION}.tar.xz."
            exit 1
          }
          tar -xf qemu-${QEMU_VERSION}.tar.xz
          mv qemu-${QEMU_VERSION} qemu
        timeout-minutes: 10

      - name: Create Meson Cross File for Emscripten
        run: |
          mkdir -p qemu
          cat << EOF > qemu/emscripten_cross.txt
          [binaries]
          c = 'emcc'
          cpp = 'em++'
          ar = 'emar'
          ld = 'emcc'
          [host_machine]
          system = 'emscripten'
          cpu_family = 'wasm'
          cpu = 'wasm32'
          endian = 'little'
          [properties]
          needs_exe_wrapper = true
          EOF
        working-directory: .

      - name: Configure QEMU for WebAssembly
        run: |
          source "${{ env.EMSDK_PATH }}/emsdk_env.sh"
          cd qemu
          meson setup build \
            --cross-file emscripten_cross.txt \
            -Dtarget_list=i386-softmmu \
            -Dtcg_interpreter=true \
            -Dxen=disabled \
            -Dsdl=enabled \
            --reconfigure || {
              echo "Meson configuration failed! Check logs above for details."
              exit 1
            }
          echo "Configuration completed successfully."
        working-directory: .
        timeout-minutes: 5

      - name: Build QEMU
        run: |
          source "${{ env.EMSDK_PATH }}/emsdk_env.sh"
          cd qemu
          emmake ninja -C build -j2 CFLAGS="-s USE_SDL=2 -s ASSERTIONS=1 -s SAFE_HEAP=1" LDFLAGS="-s USE_SDL=2 -s EXPORTED_FUNCTIONS='[_main]' -s EXPORTED_RUNTIME_METHODS='[ccall,cwrap]' -s ALLOW_MEMORY_GROWTH=1 -s WASM=1 -o qemu-system-i386.js" || {
            echo "Build failed! Check logs above for details."
            exit 1
          }
          echo "Build completed, checking binaries:"
          find build/ -name "qemu-system-i386*" || echo "No qemu-system-i386 files found!"
          ls -la build/i386-softmmu/ || echo "i386-softmmu directory not found!"
        working-directory: .
        timeout-minutes: 25

      - name: Verify Output Files
        run: |
          cd qemu/build/i386-softmmu
          if [ ! -f "qemu-system-i386.js" ] || [ ! -f "qemu-system-i386.wasm" ] || [ ! -s "qemu-system-i386.wasm" ]; then
            echo "Error: Missing or empty qemu-system-i386.js or qemu-system-i386.wasm!"
            ls -la .
            exit 1
          fi
          echo "Output files verified:"
          ls -la qemu-system-i386.*
        working-directory: .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qemu-wasm-i386
          path: qemu/build/i386-softmmu/qemu-system-i386.*
          if-no-files-found: error
          retention-days: 7

      - name: Cleanup
        run: |
          rm -rf qemu emsdk
        if: always()

      - name: Notify Build Status
        if: always()
        run: |
          echo "QEMU WebAssembly build completed with status: ${{ job.status }}"
