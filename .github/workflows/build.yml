name: Build QEMU WebAssembly
on: [push, workflow_dispatch]
jobs:
  build-qemu-wasm:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      QEMU_VERSION: "9.2.0"
      EMSCRIPTEN_VERSION: "latest"
      BUILD_DIR: "qemu-build-wasm"
      OUTPUT_DIR: "qemu-wasm-dist"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            git \
            python3 \
            python3-pip \
            ninja-build \
            libglib2.0-dev \
            libpixman-1-dev \
            libsdl2-dev \
            pkg-config \
            wget \
            xz-utils
          sudo pip3 install meson==1.5.0

      - name: Install Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}
          actions-cache-folder: 'emsdk_cache'

      - name: Download QEMU Source
        run: |
          wget -q --show-progress https://download.qemu.org/qemu-${{ env.QEMU_VERSION }}.tar.xz
          tar -xf qemu-${{ env.QEMU_VERSION }}.tar.xz
          mv qemu-${{ env.QEMU_VERSION }} qemu-src
          rm qemu-${{ env.QEMU_VERSION }}.tar.xz

      - name: Patch QEMU Build System
        run: |
          cd qemu-src
          # Create a custom target for Emscripten
          cat >> meson.build << 'EOF'
          if get_option('emscripten')
            executable('qemu-system-i386.js',
              sources: [
                'softmmu/main.c',
                # Add other necessary source files
              ],
              dependencies: [
                dependency('sdl2'),
                # Add other dependencies
              ],
              c_args: [
                '-s', 'WASM=1',
                '-s', 'USE_SDL=2',
                '-s', 'ASSERTIONS=1',
                '-s', 'ALLOW_MEMORY_GROWTH=1',
              ],
              link_args: [
                '-s', 'WASM=1',
                '-s', 'USE_SDL=2',
                '-s', 'ASSERTIONS=1',
                '-s', 'ALLOW_MEMORY_GROWTH=1',
                '--preload-file', 'pc-bios@/usr/local/share/qemu/pc-bios'
              ],
              name_suffix: 'js',
            )
          endif
          EOF

      - name: Configure and Build
        run: |
          mkdir -p ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          
          # Source Emscripten environment
          source "$EMSDK/emsdk_env.sh"
          
          # Configure with custom emscripten option
          meson setup ../qemu-src \
            -Demscripten=true \
            --cross-file="$EMSDK/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake" \
            -Dtarget_list=i386-softmmu \
            -Dsdl=enabled \
            -Dxen=disabled \
            -Dkvm=disabled \
            -Dvnc=disabled \
            -Ddocs=disabled \
            -Dtools=disabled \
            -Dguest_agent=disabled \
            -Db_lto=true \
            -Doptimization=3 \
            -Ddebug=false \
            -Dstrip=true \
            -Db_pie=false
          
          # Build
          ninja -v
          
          # Verify output
          if [ -f "qemu-system-i386.js" ]; then
            echo "Build successful"
            mkdir -p ${{ env.OUTPUT_DIR }}
            cp qemu-system-i386.* ${{ env.OUTPUT_DIR }}/
          else
            echo "Build failed"
            exit 1
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qemu-wasm-build
          path: ${{ env.OUTPUT_DIR }}/*
          if-no-files-found: error
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          rm -rf qemu-src ${{ env.BUILD_DIR }} ${{ env.OUTPUT_DIR }}
