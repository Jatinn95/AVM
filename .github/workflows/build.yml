name: Build QEMU WebAssembly for APK Runner

# Trigger the workflow on push events
on: [push]

jobs:
  build-qemu-js:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Set a reasonable timeout for the job
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment (required to test Qemu.js)
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Use Node.js 20 for compatibility

      # Step 3: Install Emscripten (required if you later decide to build from source)
      - name: Install Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          echo "EMSDK_PATH=$(pwd)" >> $GITHUB_ENV
          source ./emsdk_env.sh
          echo "Emscripten version: $(emcc --version)"
        working-directory: .
        timeout-minutes: 10

      # Step 4: Install basic build tools
      - name: Install Build Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git python3 ninja-build

      # Step 5: Fetch pre-built Qemu.js and WASM files
      - name: Fetch Pre-built Qemu.js
        run: |
          mkdir -p qemujs-binaries
          # Download the JavaScript wrapper
          wget -O qemujs-binaries/qemu-system-i386.js https://atrosinenko.github.io/qemujs-demo/qemu-system-i386.js || {
            echo "Failed to download pre-built qemu-system-i386.js!"
            exit 1
          }
          # Download the WebAssembly binary
          wget -O qemujs-binaries/qemu-system-i386.wasm https://atrosinenko.github.io/qemujs-demo/qemu-system-i386.wasm || {
            echo "Failed to download qemu-system-i386.wasm!"
            exit 1
          }
          ls -la qemujs-binaries
        working-directory: .

      # Step 6: Test the Qemu.js binary (optional, may not fully work due to CLI limitations)
      - name: Test Qemu.js Binary
        run: |
          cd qemujs-binaries
          echo "Testing Qemu.js binary..."
          if [ -f "qemu-system-i386.js" ]; then
            node qemu-system-i386.js --version || echo "Test may fail as Qemu.js might not support --version directly."
          else
            echo "Error: qemu-system-i386.js not found, skipping test."
          fi
        working-directory: .

      # Step 7: Upload the artifacts for use in your project
      - name: Upload Qemu.js Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qemu-js-prebuilt  # Name of the artifact bundle
          path: qemujs-binaries/*  # Include all files in the qemujs-binaries directory
          if-no-files-found: error  # Fail the step if no files are found
          retention-days: 7  # Keep artifacts for 7 days

      # Step 8: Clean up temporary files
      - name: Cleanup
        run: |
          rm -rf emsdk qemujs-binaries

      # Step 9: Notify the build status
      - name: Notify Build Status
        if: always()  # Run this step regardless of success or failure
        run: |
          echo "Qemu.js build job completed with status: ${{ job.status }}"
