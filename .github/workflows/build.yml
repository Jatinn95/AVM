name: Build QEMU WebAssembly
on: [push, workflow_dispatch]
jobs:
  build-qemu-wasm:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      QEMU_VERSION: "9.2.0"
      EMSCRIPTEN_VERSION: "latest"
      BUILD_DIR: "qemu-build-wasm"
      OUTPUT_DIR: "qemu-wasm-dist"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            git \
            python3 \
            python3-pip \
            ninja-build \
            libglib2.0-dev \
            libpixman-1-dev \
            libsdl2-dev \
            pkg-config \
            wget \
            xz-utils
          sudo pip3 install meson==1.5.0

      - name: Install Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{ env.EMSCRIPTEN_VERSION }}
          actions-cache-folder: 'emsdk_cache'

      - name: Download QEMU Source
        run: |
          wget -q --show-progress https://download.qemu.org/qemu-${{ env.QEMU_VERSION }}.tar.xz
          tar -xf qemu-${{ env.QEMU_VERSION }}.tar.xz
          mv qemu-${{ env.QEMU_VERSION }} qemu-src
          rm qemu-${{ env.QEMU_VERSION }}.tar.xz

      - name: Patch QEMU Build System
        run: |
          cd qemu-src
          # Patch configure to accept Emscripten compiler
          sed -i 's/check_define __linux__/true || &/' configure
          sed -i 's/check_define __FreeBSD__/true || &/' configure
          # Disable 64-bit compilation attempts
          sed -i 's/-m64//g' configure meson.build

      - name: Configure and Build QEMU
        run: |
          mkdir -p ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          
          # Source Emscripten environment
          source "$EMSDK/emsdk_env.sh"
          
          # Create proper compiler symlinks
          ln -sf "$(which emcc)" emcc
          ln -sf "$(which em++)" em++
          ln -sf "$(which emar)" emar
          ln -sf "$(which emstrip)" emstrip
          export PATH="$PWD:$PATH"
          
          # Configure with explicit compiler settings
          ../qemu-src/configure \
            --cc="$(which emcc)" \
            --cxx="$(which em++)" \
            --ar="$(which emar)" \
            --nm="$(which emnm)" \
            --strip="$(which emstrip)" \
            --target-list=i386-softmmu \
            --enable-sdl \
            --disable-xen \
            --disable-kvm \
            --disable-vnc \
            --disable-docs \
            --disable-tools \
            --disable-guest-agent \
            --enable-lto \
            --enable-strip \
            --disable-pie \
            --extra-cflags="-s WASM=1 -s USE_SDL=2 -s ASSERTIONS=1 -s ALLOW_MEMORY_GROWTH=1" \
            --extra-ldflags="-s WASM=1 -s USE_SDL=2 -s ASSERTIONS=1 -s ALLOW_MEMORY_GROWTH=1"
          
          # Build with ninja
          ninja -v
          
          # Verify the build output
          if [ -f "qemu-system-i386" ]; then
            echo "QEMU i386 build successful"
            mv qemu-system-i386 qemu-system-i386.wasm
            ls -lh qemu-system-i386.wasm
          else
            echo "Error: QEMU build failed"
            exit 1
          fi

      - name: Prepare Distribution Package
        run: |
          mkdir -p ${{ env.OUTPUT_DIR }}
          cp ${{ env.BUILD_DIR }}/qemu-system-i386.wasm ${{ env.OUTPUT_DIR }}/
          cp ${{ env.BUILD_DIR }}/qemu-system-i386.js ${{ env.OUTPUT_DIR }}/ 2>/dev/null || true
          cp ${{ env.BUILD_DIR }}/*.data ${{ env.OUTPUT_DIR }}/ 2>/dev/null || true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qemu-wasm-build
          path: ${{ env.OUTPUT_DIR }}/*
          if-no-files-found: error
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          rm -rf qemu-src ${{ env.BUILD_DIR }} ${{ env.OUTPUT_DIR }}
