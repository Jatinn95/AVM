prebuilt-qemu-js:
  runs-on: ubuntu-latest
  timeout-minutes: 15
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install Emscripten
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        echo "EMSDK_PATH=$(pwd)" >> $GITHUB_ENV
        source ./emsdk_env.sh
        echo "Emscripten version: $(emcc --version)"
      working-directory: .
      timeout-minutes: 10

    - name: Install Build Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git python3 ninja-build

    - name: Fetch and Build Qemu.js with qemujs-builder
      run: |
        echo "Fetching qemujs-builder..."
        git clone https://github.com/atrosinenko/qemujs-builder.git
        cd qemujs-builder
        echo "Fetching essential qemu submodule..."
        git submodule update --init qemu || {
          echo "Error: Submodule update failed!"
          exit 1
        }
        cd qemu
        echo "Configuring QEMU for Emscripten..."
        source "${{ env.EMSDK_PATH }}/emsdk_env.sh"
        emconfigure ./configure --target-list=i386-softmmu --enable-tcg-interpreter --disable-xen || {
          echo "Error: Configuration failed!"
          exit 1
        }
        echo "Building QEMU..."
        emmake make -j2 V=1 CFLAGS="-s USE_SDL=2 -s ASSERTIONS=1 -s SAFE_HEAP=1" LDFLAGS="-s USE_SDL=2 -s EXPORTED_FUNCTIONS='[_main]' -s EXPORTED_RUNTIME_METHODS='[ccall,cwrap]' -s ALLOW_MEMORY_GROWTH=1" || {
          echo "Error: Build failed!"
          exit 1
        }
        echo "Copying build outputs..."
        mkdir -p ../../qemujs-binaries
        cp qemu-system-i386.js ../../qemujs-binaries/ || echo "Warning: qemu-system-i386.js not found!"
        cp *.data ../../qemujs-binaries/ 2>/dev/null || echo "No .data files found."
        cp shell.html ../../qemujs-binaries/ 2>/dev/null || echo "No shell.html found, creating a basic one..."
        if [ ! -f ../../qemujs-binaries/shell.html ]; then
          cat > ../../qemujs-binaries/shell.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><title>QEMU.js</title></head>
          <body><script src="qemu-system-i386.js"></script></body>
          </html>
          EOF
        fi
      working-directory: .

    - name: Test Qemu.js Binary
      run: |
        cd qemujs-binaries
        echo "Testing Qemu.js binary..."
        if [ -f "qemu-system-i386.js" ]; then
          node qemu-system-i386.js --version || echo "Test may fail as Qemu.js might not support --version directly."
        else
          echo "Error: qemu-system-i386.js not found!"
          exit 1
        fi
      working-directory: .

    - name: Upload Qemu.js Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qemu-js-prebuilt
        path: qemujs-binaries/*
        if-no-files-found: error
        retention-days: 7

    - name: Cleanup
      run: |
        rm -rf qemujs-builder emsdk qemujs-binaries

    - name: Notify Build Status
      if: always()
      run: |
        echo "Pre-built Qemu.js job completed with status: ${{ job.status }}"
