name: Rooted Android Emulator CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  android_test:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools: 'latest'
        build-tools: '34.0.0'
        platform-tools: 'latest'
        platforms: 'android-30'
        emulator: 'latest'

    - name: Launch Rooted Emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        arch: x86_64
        profile: pixel_4
        force-avd-creation: true
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -writable-system -qemu -enable-kvm
        disable-animations: true
        script: |
          echo "Starting root process..."
          adb root
          adb remount
          adb shell avbctl disable-verification
          adb reboot
          adb wait-for-device
          adb root
          adb remount
          adb shell setprop persist.sys.root_access 1
          echo "Root access enabled!"

    - name: Install Root Tools
      run: |
        # Install SuperSU
        wget https://github.com/Chainfire/SuperSU/raw/master/arm64/su -O su
        adb push su /system/xbin/su
        adb shell chmod 0755 /system/xbin/su
        adb shell su --install
        adb shell su --daemon&

        # Verify root
        adb shell su -c id | grep "uid=0(root)" || echo "Root verification failed"

    - name: Install and Monitor Apps
      run: |
        # Install your APK
        adb install app-debug.apk

        # Install tcpdump for network monitoring
        wget https://github.com/example/tcpdump/releases/latest/download/tcpdump -O tcpdump
        adb push tcpdump /data/local/tmp/
        adb shell chmod +x /data/local/tmp/tcpdump

        # Start network monitoring
        adb shell su -c "/data/local/tmp/tcpdump -i any -s 0 -w /sdcard/network.pcap &"
        echo "Network monitoring started"

    - name: Setup Web Access
      run: |
        # Install required tools
        sudo apt-get install -y scrcpy websockify novnc

        # Start scrcpy server
        adb forward tcp:8888 localabstract:scrcpy
        
        # Start websockify and noVNC
        websockify --web /usr/share/novnc 6080 localhost:8888 &
        
        echo "VNC Web URL: http://localhost:6080/vnc.html"
        echo "Note: For GitHub runners, you'll need ngrok to expose these ports"

    - name: Keep Alive
      run: |
        echo "Rooted emulator is running for 30 minutes"
        echo "Network logs: /sdcard/network.pcap"
        echo "Use 'adb pull /sdcard/network.pcap' to retrieve logs"
        sleep 1800
