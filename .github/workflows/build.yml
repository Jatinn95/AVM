name: Rooted Android Emulator CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  android_test:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Emscripten and Compile WebAssembly
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        source ./emsdk_env.sh
        # Example: Compile a C file (replace with your actual source)
        echo 'int main() { return 360; }' > test.c  # Placeholder; replace with your code
        emcc test.c -o i360.js -s EXPORTED_FUNCTIONS='["_main"]' -s WASM=1
        ls -l i360.js i360.wasm || (echo "WebAssembly compilation failed" && exit 1)
        echo "WebAssembly compiled successfully"

    - name: Install Latest Command-Line Tools
      run: |
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
        mkdir -p $ANDROID_HOME/cmdline-tools
        unzip -q cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
        mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH

    - name: Setup Android SDK
      run: |
        sudo chmod +x $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
        yes | sudo $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses || true
        sudo $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --install \
          "build-tools;35.0.0" \
          "platform-tools" \
          "platforms;android-30" \
          "emulator" \
          "system-images;android-30;default;x86_64" \
          --channel=0
        echo "Android SDK setup completed"

    - name: Enable KVM Permissions
      run: |
        sudo groupadd -r kvm || true
        sudo usermod -aG kvm $USER
        sudo chown root:kvm /dev/kvm || true
        sudo chmod 660 /dev/kvm || true
        if ! ls -l /dev/kvm | grep -q "kvm"; then
          echo "KVM setup failed"
          exit 1
        fi
        echo "KVM permissions configured"

    - name: Launch Emulator
      uses: reactivecircus/android-emulator-runner@v2
      id: emulator
      with:
        api-level: 30
        arch: x86_64
        profile: pixel_4
        force-avd-creation: true
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -writable-system -qemu -enable-kvm
        disable-animations: true
        script: |
          echo "Waiting for emulator to boot..."
          adb wait-for-device
          if ! adb shell getprop | grep -q "ro.build.version.sdk"; then
            echo "Emulator failed to boot"
            exit 1
          fi
          echo "Emulator booted successfully with API 30"

    - name: Push WebAssembly to Emulator
      run: |
        adb push i360.js /sdcard/
        adb push i360.wasm /sdcard/
        echo "Pushed i360.js and i360.wasm to emulator"

    # Remaining steps (Install Magisk, Root Tools, etc.) remain unchanged unless you need to modify them
    # ...

    - name: Install and Monitor Apps
      run: |
        if ! adb install app-debug.apk; then
          echo "APK installation failed"
          exit 1
        fi
        wget -q https://github.com/the-tcpdump-group/tcpdump/releases/download/tcpdump-4.99.4/tcpdump -O tcpdump
        adb push tcpdump /data/local/tmp/
        adb shell "chmod 0755 /data/local/tmp/tcpdump"
        adb shell "/data/local/tmp/tcpdump -i any -s 0 -w /sdcard/network.pcap &"
        sleep 5
        if ! adb shell "ls /sdcard/network.pcap"; then
          echo "Network capture failed to start"
          exit 1
        fi
        echo "Network monitoring started"

    # Rest of your steps (ngrok, health monitoring) remain as-is
